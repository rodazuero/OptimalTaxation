alpha=0.1
for (i in 1:L) {
xguess[i]=x0
y[i]=fxe(x0)
x0=x0-alpha*df(x0)
}
plot(xguess,y, ylim = c(0.8, 18),xlim=c(-3,3),col="blue")
lines(x,fx,col='green')
alpha=0.9
for (i in 1:L) {
xguess[i]=x0
y[i]=fxe(x0)
x0=x0-alpha*df(x0)
}
plot(xguess,y, ylim = c(0.8, 18),xlim=c(-3,3),col="blue")
lines(x,fx,col='green')
alpha=20.9
for (i in 1:L) {
xguess[i]=x0
y[i]=fxe(x0)
x0=x0-alpha*df(x0)
}
plot(xguess,y, ylim = c(0.8, 18),xlim=c(-3,3),col="blue")
lines(x,fx,col='green')
x<- seq(-3,3,0.1)
L<-length(x)
xguess <- rep(NA, L)
fx=x^2+2*x+2
fxe<-function(x){x^2+2*x+2}
df<-function(x){2*x+2}
x0=3
alpha=0.1
for (i in 1:L) {
xguess[i]=x0
y[i]=fxe(x0)
x0=x0-alpha*df(x0)
}
plot(xguess,y, ylim = c(0.8, 18),xlim=c(-3,3),col="blue")
lines(x,fx,col='green')
install.packages('e1071')
install.packages("e1071")
T
sum(T)
rm(list=ls(all=TRUE))
#Obtaining the empirical moments#
source('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/EmpiricalMoments/Momentos.R')
setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Dim15_Initial')
#install.packages("ggplot2", dependencies=TRUE, INSTALL_opts = c('--no-lock'))
#install.packages('tidyverse',dependencies=TRUE)
#install.packages('rlang',dependencies=TRUE)
#devtools::install_github("r-lib/rlang", build_vignettes = TRUE)
library(nleqslv)
library(lattice)
library("gridExtra")
library("cowplot")
library(ggpubr)
library(ggplot2)
library(reshape)
library(grid)
library(data.table)
library(pastecs)
#----------------------#
#Loading the files     #
#----------------------#
#Loading the parameters
Parameters<-read.csv("ParametersCSV.csv", header = F, sep=",")
#Loading distance from theoretical to empirical moments
DistanceMom<-read.csv("DistanceMoments.csv", header = F, sep=",")
#stat.desc(subset(DistanceMom[,1],DistanceMom[,1]!=5.71312e+01))
colnames(DistanceMom)<-"Distance"
#Loading equilibrium
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
#Loading the moments
ProductionMoments<-read.csv("ThMoments0CSV.csv", header = F, sep=",")
colnames(ProductionMoments)<-paste0(rep("Production",10),colnames(ProductionMoments))
Taxesproportionally<-read.csv("ThMoments1CSV.csv", header = F, sep=",")
colnames(Taxesproportionally)<-paste0(rep("Taxesproportionally",10),colnames(Taxesproportionally))
TotalWorkersDemanded<-read.csv("ThMoments2CSV.csv", header = F, sep=",")
colnames(TotalWorkersDemanded)<-paste0(rep("TotalWorkersDemanded",10),colnames(TotalWorkersDemanded))
InformalDemandProportion<-read.csv("ThMoments3CSV.csv", header = F, sep=",")
colnames(InformalDemandProportion)<-paste0(rep("InformalDemandProportion",10),colnames(InformalDemandProportion))
IncomeDistribution<-read.csv("ThMoments4CSV.csv", header = F, sep=",")
colnames(IncomeDistribution)<-paste0(rep("IncomeDistribution",10),colnames(IncomeDistribution))
InformalLaborSupplyProp<-read.csv("ThMoments5CSV.csv", header = F, sep=",")
colnames(InformalLaborSupplyProp)<-paste0(rep("InformalLaborSupplyProp",10),colnames(InformalLaborSupplyProp))
TotalLaborSupply<-read.csv("ThMoments6CSV.csv", header = F, sep=",")
colnames(TotalLaborSupply)<-paste0(rep("TotalLaborSupply",10),colnames(TotalLaborSupply))
#We only need first column of prop entrepreneurs
PropEntrepreneurs<-read.csv("ThMoments7CSV.csv", header = F, sep=",")
PropEntrepreneurs<-PropEntrepreneurs[,1]
#EquilibriumValues has 1046. Take one less\
EqValues<-EqValues[1:10465]
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
#We need a column indicating if the equilibrium is successful or not. We will call it Indic.
#This will be if:
#1. TotalLaborSupply!=0.
AllMmoments[,Indic1 :=1-(TotalLaborSupplyV1+TotalLaborSupplyV2+TotalLaborSupplyV3
+TotalLaborSupplyV4+ TotalLaborSupplyV5 + TotalLaborSupplyV6+
TotalLaborSupplyV7+TotalLaborSupplyV8+TotalLaborSupplyV9==0)]
#2. If Total Labor supply ==1000
AllMmoments[,Indic2 :=1-(TotalLaborSupplyV1==1000)]
#3. If total Production ==0
AllMmoments[,Indic3 :=1-(ProductionV1+ProductionV2+ProductionV3
+ProductionV4+ ProductionV5 + ProductionV6+
ProductionV7+ProductionV8+ProductionV9==0)]
#4. If total taxes are zero:
AllMmoments[,Indic4:=1-(TaxesproportionallyV1+TaxesproportionallyV2+TaxesproportionallyV3
+TaxesproportionallyV4+TaxesproportionallyV5+TaxesproportionallyV6
+TaxesproportionallyV7+TaxesproportionallyV8+TaxesproportionallyV9==0)]
#5. If total labor demand is zero:
AllMmoments[,Indic5:=1-(TotalWorkersDemandedV1+TotalWorkersDemandedV2+TotalWorkersDemandedV3
+TotalWorkersDemandedV4+TotalWorkersDemandedV5+TotalWorkersDemandedV6
+TotalWorkersDemandedV7+TotalWorkersDemandedV8+TotalWorkersDemandedV9==0)]
#6. Replace informal proportion demand if -nan to zero.
AllMmoments[is.na(InformalDemandProportionV1), InformalDemandProportionV1 := 0]
AllMmoments[is.na(InformalDemandProportionV2), InformalDemandProportionV2 := 0]
AllMmoments[is.na(InformalDemandProportionV3), InformalDemandProportionV3 := 0]
AllMmoments[is.na(InformalDemandProportionV4), InformalDemandProportionV4 := 0]
AllMmoments[is.na(InformalDemandProportionV5), InformalDemandProportionV5 := 0]
AllMmoments[is.na(InformalDemandProportionV6), InformalDemandProportionV6 := 0]
AllMmoments[is.na(InformalDemandProportionV7), InformalDemandProportionV7 := 0]
AllMmoments[is.na(InformalDemandProportionV8), InformalDemandProportionV8 := 0]
AllMmoments[is.na(InformalDemandProportionV9), InformalDemandProportionV9 := 0]
#4. Total
AllMmoments[,Indic :=1-1*(Indic1==0|Indic2==0|Indic3==0|Indic4==0|Indic5==0)]
#5. And remove Indics
AllMmoments[,Indic1:=NULL]
AllMmoments[,Indic2:=NULL]
AllMmoments[,Indic3:=NULL]
AllMmoments[,Indic4:=NULL]
AllMmoments[,Indic5:=NULL]
##Names modified to have C, the constant in the production function as additional parameter
names<-c("aalpha","ggamma","ddelta","bbeta","ssigma","kkappa","psi","chi",
"rho","mmu1","mmu2","ssigma1","ssigma2","rho12","c","NA")
colnames(Parameters)<-names
Everything<-data.table(Parameters,DistanceMom,AllMmoments)
#----------------------------------------------------------------------#
#We only take those where positive number of entrepreneurs where found #
#----------------------------------------------------------------------#
#The combinations with problems throw 666 into  InformalDemandProportion[,1].
#We take only the moments where InformalDemandProprtion[,1]!=666
#-----------------------------------#
#Analyzing Parameters and equilibria#
#-----------------------------------#
Parameters<-data.table(Parameters,AllMmoments$Indic)
setnames(Parameters,17,"Indic")
#For those where there is equilibrium, set Indic =1.
#Subsetting the two
ParametersEquilibria=subset(Parameters,Indic!=0)
ParametersNoEquilibria=subset(Parameters,Indic==0)
#Equilibrium
EverythingEq<-subset(Everything,Indic!=0)
#Sort by the distance
EverythingEqDistance<-EverythingEq[order(Distance)]
head(EverythingEqDistance)
EverythingEq$InformalLaborSupplyPropV1
EverythingEq$PropEntrepreneurs
#------------------------------------------------#
# Comparing the theoretical and empirical moments#
#------------------------------------------------#
#Generating the data.table to create graphs
Comparing<-data.table(as.factor(c(rep(1,9),rep(0,9))))
colnames(Comparing)<-c("Sample")
Comparing$Decile<-c(seq(1,9,1),seq(1,9,1))
for(i in 2265:2265){
#Deciding which observation to be analyzed
#i=1
Folder=paste('Model',i, sep = "")
cd="/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Dim15_Initial/ModelFit/"
setwd(cd)
newcd=paste(cd,Folder,sep="")
dir.create(Folder)
setwd(newcd)
#Including the theoretical and empirical moments
#I will do a subsample of sobols for which entrepreneurs where relevant:
#And store the original EverythingEqDistance in other stuff
#Only run it once to keep it!:
#EverythingEqDistanceOriginal<-EverythingEqDistance
#If you want to subset the equilibria analyzed this is the place to do it.
#Otherwise, just keep going.
#And the rest:
#EverythingEqDistanceEntrep<-subset(EverythingEqDistanceOriginal,PropEntrepreneurs>0.19)
#max(EverythingEqDistanceEntrep$InformalDemandProportionV4)
#EverythingEqDistanceEntrep$InformalDemandProportionV5[i]
#EverythingEqDistance<-EverythingEqDistanceEntrep
#1. Production
ProductionTheoretical<-c(EverythingEqDistance$ProductionV1[i],
EverythingEqDistance$ProductionV2[i],
EverythingEqDistance$ProductionV3[i],
EverythingEqDistance$ProductionV4[i],
EverythingEqDistance$ProductionV5[i],
EverythingEqDistance$ProductionV6[i],
EverythingEqDistance$ProductionV7[i],
EverythingEqDistance$ProductionV8[i],
EverythingEqDistance$ProductionV9[i])
Comparing$Production <-  c(ProductionTheoretical/1000, MOMENTO7A$Produccion[1:9])
#2. Taxes Proportionally cumulative
Taxesproportionally<-c(EverythingEqDistance$TaxesproportionallyV1[i],
EverythingEqDistance$TaxesproportionallyV2[i],
EverythingEqDistance$TaxesproportionallyV3[i],
EverythingEqDistance$TaxesproportionallyV4[i],
EverythingEqDistance$TaxesproportionallyV5[i],
EverythingEqDistance$TaxesproportionallyV6[i],
EverythingEqDistance$TaxesproportionallyV7[i],
EverythingEqDistance$TaxesproportionallyV8[i],
EverythingEqDistance$TaxesproportionallyV9[i])
Comparing$TaxesPayedProportionally <-  c(Taxesproportionally, MOMENTO7A$`Proporción de pago de impuestos acumulada`[1:9]/sum(MOMENTO7A$`Proporción de pago de impuestos acumulada`[1:9]))
#3. Total workers demanded
DemandTotalWorkers<-c(EverythingEqDistance$TotalWorkersDemandedV1[i],
EverythingEqDistance$TotalWorkersDemandedV2[i],
EverythingEqDistance$TotalWorkersDemandedV3[i],
EverythingEqDistance$TotalWorkersDemandedV4[i],
EverythingEqDistance$TotalWorkersDemandedV5[i],
EverythingEqDistance$TotalWorkersDemandedV6[i],
EverythingEqDistance$TotalWorkersDemandedV7[i],
EverythingEqDistance$TotalWorkersDemandedV8[i],
EverythingEqDistance$TotalWorkersDemandedV9[i])
Comparing$TotalDemandWorkers <-  c(DemandTotalWorkers,MOMENTO2$`Numero de trabajadores`[1:9] )
#4. Informal Demand proportion
InformalDemandProportion<-c(EverythingEqDistance$InformalDemandProportionV4[i],
EverythingEqDistance$InformalDemandProportionV7[i],
EverythingEqDistance$InformalDemandProportionV8[i])
InformalPROPDemand <- data.table(c(MOMENTO3$Informalidad[1]/100,MOMENTO3$Informalidad[2]/100,MOMENTO3$Informalidad[3]/100,
InformalDemandProportion))
InformalPROPDemand$Decile<-c(4,7,8,4,7,8)
InformalPROPDemand$Sample<-as.factor(c(0,0,0,1,1,1))
#5. Income distribution
Income<-c(EverythingEqDistance$IncomeDistributionV1[i],
EverythingEqDistance$IncomeDistributionV2[i],
EverythingEqDistance$IncomeDistributionV3[i],
EverythingEqDistance$IncomeDistributionV4[i],
EverythingEqDistance$IncomeDistributionV5[i],
EverythingEqDistance$IncomeDistributionV6[i],
EverythingEqDistance$IncomeDistributionV7[i],
EverythingEqDistance$IncomeDistributionV8[i],
EverythingEqDistance$IncomeDistributionV9[i])
Comparing$IncomeDistribution <-  c(Income,as.numeric(M5.3A[4:12,2]) )
#6. Informal labor supply
InformalLaborSupply<-c(EverythingEqDistance$InformalLaborSupplyPropV1[i],
EverythingEqDistance$InformalLaborSupplyPropV2[i],
EverythingEqDistance$InformalLaborSupplyPropV3[i],
EverythingEqDistance$InformalLaborSupplyPropV4[i],
EverythingEqDistance$InformalLaborSupplyPropV5[i],
EverythingEqDistance$InformalLaborSupplyPropV6[i],
EverythingEqDistance$InformalLaborSupplyPropV7[i],
EverythingEqDistance$InformalLaborSupplyPropV8[i],
EverythingEqDistance$InformalLaborSupplyPropV9[i])
Comparing$InformalLaborSupply <-  c(InformalLaborSupply,MOMENTO8$`Informalidad (%)`[1:9]/100 )
#7. Total labor supply
TotalLaborSupply<-c(EverythingEqDistance$TotalLaborSupplyV1[i],
EverythingEqDistance$TotalLaborSupplyV2[i],
EverythingEqDistance$TotalLaborSupplyV3[i],
EverythingEqDistance$TotalLaborSupplyV4[i],
EverythingEqDistance$TotalLaborSupplyV5[i],
EverythingEqDistance$TotalLaborSupplyV6[i],
EverythingEqDistance$TotalLaborSupplyV7[i],
EverythingEqDistance$TotalLaborSupplyV8[i],
EverythingEqDistance$TotalLaborSupplyV9[i])
Comparing$TotalLaborSupply <-  c(TotalLaborSupply,MOMENTO19$`Version 2A`[1:9] )
Comparing$TotalLaborSupply2<-c(TotalLaborSupply,MOMENTO19$`Version 2A`[1:9])
#8. Proportion of entrepreneurs
PropEntrep<-data.table(c(EverythingEqDistance$PropEntrepreneurs[i],(M4[2,2]/(M4[2,1]+M4[2,2]))))
PropEntrep$Sample<-c(as.factor(c(0,1)))
print(PropEntrep)
InformalPROPDemand
#Subsetting the ones where entrepreneurs are more than 25%:
#-----#
#Plots#
#-----#
#Set directory
#setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Dim15_Initial/ModelFit')
print("hahahahaha")
#Size of line
sizeline=10
sizerel=7
#Production
Production<-ggplot(data=Comparing,aes(x=Decile,y=Production,colour=Sample))+geom_line(size=sizeline)+geom_point()
Production<-Production+scale_colour_discrete(labels=c("Data","Model")  )
Production<-Production+ theme_bw()
Production<-Production+scale_x_continuous(breaks = seq(1,9,1))
Production<-Production + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
Production<-Production+ggtitle(" ") +ylab("Thousands of S/.")
Production
dev.set()
png(file="Production.png",width=1600,height=850)
print(Production)
dev.off()
print("haha")
#Taxes
Taxes<-ggplot(data=Comparing,aes(x=Decile,y=TaxesPayedProportionally,colour=Sample))+geom_line(size=sizeline)+geom_point()
Taxes<-Taxes+scale_colour_discrete(labels=c("Data","Model")  )
Taxes<-Taxes+ theme_bw()
Taxes<-Taxes+scale_x_continuous(breaks = seq(1,9,1))
Taxes<-Taxes + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
Taxes<-Taxes+ggtitle(" ") +ylab("%")
Taxes
dev.set()
png(file="Taxes.png",width=1600,height=850)
print(Taxes)
dev.off()
#Total demand workers
#DemandWorkers
DemandWorkers<-ggplot(data=Comparing,aes(x=Decile,y=TotalDemandWorkers,colour=Sample))+geom_line(size=sizeline)+geom_point()
DemandWorkers<-DemandWorkers+scale_colour_discrete(labels=c("Data","Model")  )
DemandWorkers<-DemandWorkers+ theme_bw()
DemandWorkers<-DemandWorkers+scale_x_continuous(breaks = seq(1,9,1))
DemandWorkers<-DemandWorkers + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
DemandWorkers<-DemandWorkers+ggtitle(" ") +ylab("#")
DemandWorkers
dev.set()
png(file="DemandWorkers.png",width=1600,height=850)
print(DemandWorkers)
dev.off()
#IncomeDistribution
IncomeDistribution<-ggplot(data=Comparing,aes(x=Decile,y=IncomeDistribution,colour=Sample))+geom_line(size=sizeline)+geom_point()
IncomeDistribution<-IncomeDistribution+scale_colour_discrete(labels=c("Data","Model")  )
IncomeDistribution<-IncomeDistribution+ theme_bw()
IncomeDistribution<-IncomeDistribution+scale_x_continuous(breaks = seq(1,9,1))
IncomeDistribution<-IncomeDistribution + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
IncomeDistribution<-IncomeDistribution+ggtitle(" ") +ylab("S/.")
IncomeDistribution
dev.set()
png(file="IncomeDistribution.png",width=1600,height=850)
print(IncomeDistribution)
dev.off()
#InformalLaborSupply
InformalLaborSupply<-ggplot(data=Comparing,aes(x=Decile,y=InformalLaborSupply,colour=Sample))+geom_line(size=sizeline)+geom_point()
InformalLaborSupply<-InformalLaborSupply+scale_colour_discrete(labels=c("Data","Model")  )
InformalLaborSupply<-InformalLaborSupply+ theme_bw()
InformalLaborSupply<-InformalLaborSupply+scale_x_continuous(breaks = seq(1,9,1))
InformalLaborSupply<-InformalLaborSupply + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
InformalLaborSupply<-InformalLaborSupply+ggtitle(" ") +ylab("Proportion")
InformalLaborSupply
dev.set()
png(file="InformalLaborSupply.png",width=1600,height=850)
print(InformalLaborSupply)
dev.off()
#TotalLaborSupply 1
TotalLaborSupply<-ggplot(data=Comparing,aes(x=Decile,y=TotalLaborSupply,colour=Sample))+geom_line(size=sizeline)+geom_point()
TotalLaborSupply<-TotalLaborSupply+scale_colour_discrete(labels=c("Data","Model")  )
TotalLaborSupply<-TotalLaborSupply+ theme_bw()
TotalLaborSupply<-TotalLaborSupply+scale_x_continuous(breaks = seq(1,9,1))
TotalLaborSupply<-TotalLaborSupply + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
TotalLaborSupply<-TotalLaborSupply+ggtitle(" ") +ylab("#")
dev.set()
png(file="TotalLaborSupply.png",width=1600,height=850)
print(TotalLaborSupply)
dev.off()
#TotalLaborSupply 2
TotalLaborSupply<-ggplot(data=Comparing,aes(x=Decile,y=TotalLaborSupply2,colour=Sample))+geom_line(size=sizeline)+geom_point()
TotalLaborSupply<-TotalLaborSupply+scale_colour_discrete(labels=c("Data","Model")  )
TotalLaborSupply<-TotalLaborSupply+ theme_bw()
TotalLaborSupply<-TotalLaborSupply+scale_x_continuous(breaks = seq(1,9,1))
TotalLaborSupply<-TotalLaborSupply + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
TotalLaborSupply<-TotalLaborSupply+ggtitle(" ") +ylab("#")
dev.set()
png(file="TotalLaborSupply2.png",width=1600,height=850)
print(TotalLaborSupply)
dev.off()
#Informal proportion demand
InformalDemand<-ggplot(data=InformalPROPDemand,aes(x=Decile,y=V1,colour=Sample))+geom_line(size=sizeline)+geom_point()
InformalDemand<-InformalDemand+scale_colour_discrete(labels=c("Data","Model")  )
InformalDemand<-InformalDemand+ theme_bw()
InformalDemand<-InformalDemand+scale_x_continuous(breaks = seq(1,9,1))
InformalDemand<-InformalDemand + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
InformalDemand<-InformalDemand+ggtitle(" ") +ylab("#")
InformalDemand
dev.set()
png(file="InformalLaborDemand.png",width=1600,height=850)
print(InformalDemand)
dev.off()
#Proportion of entrepreneurs
PropEntrep$Sample<-c("Model","Data")
PropEntrepGraph<-ggplot(data=PropEntrep,aes(y=V1,x=Sample))+geom_bar(stat="identity")
PropEntrepGraph<-PropEntrepGraph+ggtitle("Proportion entrepreneurs") +ylab("%")
dev.set()
png(file="PropEntrepGraph.png",width=1600,height=850)
print(PropEntrepGraph)
dev.off()
}
EverythingEqDistance[1,1]
EverythingEqDistance[i,1]
EverythingEqDistance[i,1:20]
i
aalpha  ggamma  ddelta   bbeta  ssigma  kkappa     psi     chi     rho
1: 0.152344 6.91592 647.371 324.761 8.34678 263.246 3.17603 691.115 3.10674
mmu1    mmu2 ssigma1 ssigma2    rho12        c NA Distance V2 ProductionV1
1: 0.510156 4.01797 1.60879 4.23574 0.141992
EverythingEqDistance[1,1:20]
EverythingEqDistance[2,1:20]
EverythingEqDistance[1:20,1:20]
EverythingEqDistance[1:20,1]
EverythingEqDistance[1:200,1]
EverythingEqDistance[1:230,1]
EverythingEqDistance[1:250,1]
EverythingEqDistance[1:260,1]
EverythingEqDistance[1:265,1]
EverythingEqDistance[1:265,1:20]
EverythingEqDistance[2265,1:20]
library(randtoolbox)
#Lessons learned by the naive sobol:
#1. Decrease the values of ddelta. Have it between 0 and 300
#2. Decrease chi. Between 0 and 200
#Naive sobol with huge range. Very few equilibria found
Rand<-sobol(8192,dim=15,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.01)+0.01  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.01 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(300-0.1)+0.01 #ddelta between 0.1 and 5 (Originally 0-700)
Rand[,4]<-Rand[,4]*(700-0.1)+0.01 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.01 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.01 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(600-0.1)+0.01 #chi between 0.1 and 4 (Originally 0-700 but no eq>200)
Rand[,9]<-Rand[,9]*(10-0.1)+0.01 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.01 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.01#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.01 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.01 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.01   #rho12 between 0 and 1
Rand[,15]<-Rand[,15]*100+0.01   #c between 0 and 1
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
EverythingEqDistance[2265,1:20]
WageD<-read.table("https://raw.githubusercontent.com/rodazuero/samplecode/master/CUDA/mle_mincer/DATACUDA.csv",sep = ",")
WageD<-data.table(WageD)
colnames(WageD)<-c('age','schooling','logwage')
mean(exp(WageD$logwage))
sd(exp(WageD$logwage))
mean(WageD$age)
sd(WageD$age)
mean(WageD$schooling)
sd(WageD$schooling)
mean(exp(WageD[age < 50 & schooling > 12]$logwage))
library(ggplot2)
p <- ggplot(WageD, aes(logwage, schooling))
p<-p + geom_point()
p
p
p <- ggplot(WageD, aes(logwage, schooling))
p<-p + geom_point()
p
library(ggplot2)
WageD
head(WageD)
p <- ggplot(WageD, aes(logwage, schooling))
p+geom_point()
p <- ggplot(WageD, aes(logwage, schooling))
p<-p + geom_point()
p
dev.off()
dev.off()
dev.set()
p
dev.off()
dev.off()
p <- ggplot(WageD, aes(logwage, schooling))
p<-p + geom_point()
p
