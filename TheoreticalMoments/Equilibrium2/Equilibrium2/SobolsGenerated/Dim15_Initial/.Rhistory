#1. TotalLaborSupply!=0.
AllMmoments[,Indic1 :=1-(TotalLaborSupplyV1+TotalLaborSupplyV2+TotalLaborSupplyV3
+TotalLaborSupplyV4+ TotalLaborSupplyV5 + TotalLaborSupplyV6+
TotalLaborSupplyV7+TotalLaborSupplyV8+TotalLaborSupplyV9==0)]
#2. If Total Labor supply ==1000
AllMmoments[,Indic2 :=1-(TotalLaborSupplyV1==1000)]
#3. If total Production ==0
AllMmoments[,Indic3 :=1-(ProductionV1+ProductionV2+ProductionV3
+ProductionV4+ ProductionV5 + ProductionV6+
ProductionV7+ProductionV8+ProductionV9==0)]
#4. Total
AllMmoments[,Indic :=1-1*(Indic1==0|Indic2==0|Indic3==0)]
#5. And remove Indic1, Indic2, Indic3
AllMmoments[,Indic1:=NULL]
AllMmoments[,Indic2:=NULL]
AllMmoments[,Indic3:=NULL]
names<-c("aalpha","ggamma","ddelta","bbeta","ssigma","kkappa","psi","chi",
"rho","mmu1","mmu2","ssigma1","ssigma2","rho12","NA")
colnames(Parameters)<-names
Everything<-data.table(Parameters,DistanceMom,AllMmoments[1:10175])
#----------------------------------------------------------------------#
#We only take those where positive number of entrepreneurs where found #
#----------------------------------------------------------------------#
#The combinations with problems throw 666 into  InformalDemandProportion[,1].
#We take only the moments where InformalDemandProprtion[,1]!=666
#-----------------------------------#
#Analyzing Parameters and equilibria#
#-----------------------------------#
setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Naive2/')
#Loading the parameters
Parameters<-read.csv("ParametersCSV.csv", header = F, sep=",")
#Loading distance from theoretical to empirical moments
DistanceMom<-read.csv("DistanceMoments.csv", header = F, sep=",")
colnames(DistanceMom)<-"Distance"
#Loading equilibrium
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
#Loading the moments
ProductionMoments<-read.csv("ThMoments0CSV.csv", header = F, sep=",")
colnames(ProductionMoments)<-paste0(rep("Production",10),colnames(ProductionMoments))
Taxesproportionally<-read.csv("ThMoments1CSV.csv", header = F, sep=",")
colnames(Taxesproportionally)<-paste0(rep("Taxesproportionally",10),colnames(Taxesproportionally))
TotalWorkersDemanded<-read.csv("ThMoments2CSV.csv", header = F, sep=",")
colnames(TotalWorkersDemanded)<-paste0(rep("TotalWorkersDemanded",10),colnames(TotalWorkersDemanded))
InformalDemandProportion<-read.csv("ThMoments3CSV.csv", header = F, sep=",")
colnames(InformalDemandProportion)<-paste0(rep("InformalDemandProportion",10),colnames(InformalDemandProportion))
IncomeDistribution<-read.csv("ThMoments4CSV.csv", header = F, sep=",")
colnames(IncomeDistribution)<-paste0(rep("IncomeDistribution",10),colnames(IncomeDistribution))
InformalLaborSupplyProp<-read.csv("ThMoments5CSV.csv", header = F, sep=",")
colnames(InformalLaborSupplyProp)<-paste0(rep("InformalLaborSupplyProp",10),colnames(InformalLaborSupplyProp))
TotalLaborSupply<-read.csv("ThMoments6CSV.csv", header = F, sep=",")
colnames(TotalLaborSupply)<-paste0(rep("TotalLaborSupply",10),colnames(TotalLaborSupply))
#We only need first column of prop entrepreneurs
PropEntrepreneurs<-read.csv("ThMoments7CSV.csv", header = F, sep=",")
PropEntrepreneurs<-PropEntrepreneurs[,1]
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
#We need a column indicating if the equilibrium is successful or not. We will call it Indic.
#This will be if:
#1. TotalLaborSupply!=0.
AllMmoments[,Indic1 :=1-(TotalLaborSupplyV1+TotalLaborSupplyV2+TotalLaborSupplyV3
+TotalLaborSupplyV4+ TotalLaborSupplyV5 + TotalLaborSupplyV6+
TotalLaborSupplyV7+TotalLaborSupplyV8+TotalLaborSupplyV9==0)]
#2. If Total Labor supply ==1000
AllMmoments[,Indic2 :=1-(TotalLaborSupplyV1==1000)]
#3. If total Production ==0
AllMmoments[,Indic3 :=1-(ProductionV1+ProductionV2+ProductionV3
+ProductionV4+ ProductionV5 + ProductionV6+
ProductionV7+ProductionV8+ProductionV9==0)]
#4. Total
AllMmoments[,Indic :=1-1*(Indic1==0|Indic2==0|Indic3==0)]
#5. And remove Indic1, Indic2, Indic3
AllMmoments[,Indic1:=NULL]
AllMmoments[,Indic2:=NULL]
AllMmoments[,Indic3:=NULL]
names<-c("aalpha","ggamma","ddelta","bbeta","ssigma","kkappa","psi","chi",
"rho","mmu1","mmu2","ssigma1","ssigma2","rho12","NA")
colnames(Parameters)<-names
Everything<-data.table(Parameters,DistanceMom,AllMmoments[1:10175])
Parameters<-data.table(Parameters,AllMmoments$Indic[1:10175])
setnames(Parameters,16,"Indic")
#For those where there is equilibrium, set Indic =1.
#Subsetting the two
ParametersEquilibria=subset(Parameters,Indic!=0)
ParametersNoEquilibria=subset(Parameters,Indic==0)
#----------------------------------------------------------#
#Conditional distributions of each parameter on equilibrium#
#----------------------------------------------------------#
#1. Aalpha
#1.1 Equilibrium
#Equilibrium
EverythingEq<-subset(Everything,Indic!=0)
#Sort by the distance
EverythingEqDistance<-EverythingEq[order(Distance)]
head(EverythingEqDistance)
EverythingEq$InformalLaborSupplyPropV1
EverythingEq$PropEntrepreneurs
#------------------------------------------------#
# Comparing the theoretical and empirical moments#
#------------------------------------------------#
#Generating the data.table to create graphs
Comparing<-data.table(as.factor(c(rep(1,9),rep(0,9))))
colnames(Comparing)<-c("Sample")
Comparing$Decile<-c(seq(1,9,1),seq(1,9,1))
#Deciding which observation to be analyzed
i=1
#Including the theoretical and empirical moments
#I will do a subsample of sobols for which entrepreneurs where relevant:
#And store the original EverythingEqDistance in other stuff
#Only run it once to keep it!:
#EverythingEqDistanceOriginal<-EverythingEqDistance
#If you want to subset the equilibria analyzed this is the place to do it.
#Otherwise, just keep going.
#And the rest:
#EverythingEqDistanceEntrep<-subset(EverythingEqDistanceOriginal,PropEntrepreneurs>0.19)
#max(EverythingEqDistanceEntrep$InformalDemandProportionV4)
#EverythingEqDistanceEntrep$InformalDemandProportionV5[i]
#EverythingEqDistance<-EverythingEqDistanceEntrep
#1. Production
ProductionTheoretical<-c(EverythingEqDistance$ProductionV1[i],
EverythingEqDistance$ProductionV2[i],
EverythingEqDistance$ProductionV3[i],
EverythingEqDistance$ProductionV4[i],
EverythingEqDistance$ProductionV5[i],
EverythingEqDistance$ProductionV6[i],
EverythingEqDistance$ProductionV7[i],
EverythingEqDistance$ProductionV8[i],
EverythingEqDistance$ProductionV9[i])
Comparing$Production <-  c(ProductionTheoretical/1000, MOMENTO7A$Produccion[1:9])
#2. Taxes Proportionally cumulative
Taxesproportionally<-c(EverythingEqDistance$TaxesproportionallyV1[i],
EverythingEqDistance$TaxesproportionallyV2[i],
EverythingEqDistance$TaxesproportionallyV3[i],
EverythingEqDistance$TaxesproportionallyV4[i],
EverythingEqDistance$TaxesproportionallyV5[i],
EverythingEqDistance$TaxesproportionallyV6[i],
EverythingEqDistance$TaxesproportionallyV7[i],
EverythingEqDistance$TaxesproportionallyV8[i],
EverythingEqDistance$TaxesproportionallyV9[i])
Comparing$TaxesPayedProportionally <-  c(Taxesproportionally, MOMENTO7A$`Proporción de pago de impuestos acumulada`[1:9]/sum(MOMENTO7A$`Proporción de pago de impuestos acumulada`[1:9]))
#3. Total workers demanded
DemandTotalWorkers<-c(EverythingEqDistance$TotalWorkersDemandedV1[i],
EverythingEqDistance$TotalWorkersDemandedV2[i],
EverythingEqDistance$TotalWorkersDemandedV3[i],
EverythingEqDistance$TotalWorkersDemandedV4[i],
EverythingEqDistance$TotalWorkersDemandedV5[i],
EverythingEqDistance$TotalWorkersDemandedV6[i],
EverythingEqDistance$TotalWorkersDemandedV7[i],
EverythingEqDistance$TotalWorkersDemandedV8[i],
EverythingEqDistance$TotalWorkersDemandedV9[i])
Comparing$TotalDemandWorkers <-  c(DemandTotalWorkers,MOMENTO2$`Numero de trabajadores`[1:9] )
#4. Informal Demand proportion
InformalDemandProportion<-c(EverythingEqDistance$InformalDemandProportionV4[i],
EverythingEqDistance$InformalDemandProportionV7[i],
EverythingEqDistance$InformalDemandProportionV8[i])
InformalPROPDemand <- data.table(c(MOMENTO3$Informalidad[1]/100,MOMENTO3$Informalidad[2]/100,MOMENTO3$Informalidad[3]/100,
InformalDemandProportion))
InformalPROPDemand$Decile<-c(4,7,8,4,7,8)
InformalPROPDemand$Sample<-as.factor(c(0,0,0,1,1,1))
#5. Income distribution
Income<-c(EverythingEqDistance$IncomeDistributionV1[i],
EverythingEqDistance$IncomeDistributionV2[i],
EverythingEqDistance$IncomeDistributionV3[i],
EverythingEqDistance$IncomeDistributionV4[i],
EverythingEqDistance$IncomeDistributionV5[i],
EverythingEqDistance$IncomeDistributionV6[i],
EverythingEqDistance$IncomeDistributionV7[i],
EverythingEqDistance$IncomeDistributionV8[i],
EverythingEqDistance$IncomeDistributionV9[i])
Comparing$IncomeDistribution <-  c(Income,as.numeric(M5.3A[4:12,2]) )
#6. Informal labor supply
InformalLaborSupply<-c(EverythingEqDistance$InformalLaborSupplyPropV1[i],
EverythingEqDistance$InformalLaborSupplyPropV2[i],
EverythingEqDistance$InformalLaborSupplyPropV3[i],
EverythingEqDistance$InformalLaborSupplyPropV4[i],
EverythingEqDistance$InformalLaborSupplyPropV5[i],
EverythingEqDistance$InformalLaborSupplyPropV6[i],
EverythingEqDistance$InformalLaborSupplyPropV7[i],
EverythingEqDistance$InformalLaborSupplyPropV8[i],
EverythingEqDistance$InformalLaborSupplyPropV9[i])
Comparing$InformalLaborSupply <-  c(InformalLaborSupply,MOMENTO8$`Informalidad (%)`[1:9]/100 )
#7. Total labor supply
TotalLaborSupply<-c(EverythingEqDistance$TotalLaborSupplyV1[i],
EverythingEqDistance$TotalLaborSupplyV2[i],
EverythingEqDistance$TotalLaborSupplyV3[i],
EverythingEqDistance$TotalLaborSupplyV4[i],
EverythingEqDistance$TotalLaborSupplyV5[i],
EverythingEqDistance$TotalLaborSupplyV6[i],
EverythingEqDistance$TotalLaborSupplyV7[i],
EverythingEqDistance$TotalLaborSupplyV8[i],
EverythingEqDistance$TotalLaborSupplyV9[i])
Comparing$TotalLaborSupply <-  c(TotalLaborSupply,MOMENTO19$`Version 2A`[1:9] )
Comparing$TotalLaborSupply2<-c(TotalLaborSupply,MOMENTO19$`Version 2A`[1:9])
#8. Proportion of entrepreneurs
PropEntrep<-data.table(c(EverythingEqDistance$PropEntrepreneurs[i],(M4[2,2]/(M4[2,1]+M4[2,2]))))
PropEntrep$Sample<-c(as.factor(c(0,1)))
print(PropEntrep)
InformalPROPDemand
#Subsetting the ones where entrepreneurs are more than 25%:
#-----#
#Plots#
#-----#
#Set directory
setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Naive2/ModelFit')
#Size of line
sizeline=10
sizerel=7
#Production
Production<-ggplot(data=Comparing,aes(x=Decile,y=Production,colour=Sample))+geom_line(size=sizeline)+geom_point()
Production<-Production+scale_colour_discrete(labels=c("Data","Model")  )
Production<-Production+ theme_bw()
Production<-Production+scale_x_continuous(breaks = seq(1,9,1))
Production<-Production + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
Production<-Production+ggtitle(" ") +ylab("Thousands of S/.")
Production
Production
#Taxes
Taxes<-ggplot(data=Comparing,aes(x=Decile,y=TaxesPayedProportionally,colour=Sample))+geom_line(size=sizeline)+geom_point()
Taxes<-Taxes+scale_colour_discrete(labels=c("Data","Model")  )
Taxes<-Taxes+ theme_bw()
Taxes<-Taxes+scale_x_continuous(breaks = seq(1,9,1))
Taxes<-Taxes + theme(
plot.title = element_text(hjust=0.5,size = rel(sizerel)),
axis.title=element_text(size = rel(sizerel)),
axis.text.x=element_text(size = rel(sizerel)),
axis.text.y=element_text(size = rel(sizerel)),
legend.text=element_text(size = rel(sizerel)),
legend.title=element_text(size=rel(0)))
Taxes<-Taxes+ggtitle(" ") +ylab("%")
Taxes
Comparing[1,1:13]
Comparing[1,1:13]
Comparing[1,1]
Comparing[1,1:1]
Comparing[1,1:2]
Comparing[1,1:3]
Comparing[1,1:13]
Comparing[1,1:12]
Comparing[1,1:10]
Comparing[1,1:19]
Comparing[1,1:9]
EverythingEq[1,1:9]
EverythingEq[1:20]
EverythingEq[1,1:20]
Rand<-sobol(10000,dim=14,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.1)+0.1  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.1 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(700-0.1)+0.1 #ddelta between 0.1 and 5
Rand[,4]<-Rand[,4]*(700-0.1)+0.1 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.1 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.1 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(700-0.1)+0.1 #chi between 0.1 and 4
Rand[,9]<-Rand[,9]*(10-0.1)+0.1 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.1 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.1#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.1 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.1 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.1   #rho12 between 0 and 1
Rand[,1]
Rand[1,]
Rand[1,3]=150.05
Rand[1,]
Rand[1,8]
Rand[1,8]=150.5
Rand[1,]=
.
Rand[1,]
Rand[1,8]=100.5
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim14.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand<-sobol(10000,dim=15,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.1)+0.1  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.1 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(700-0.1)+0.1 #ddelta between 0.1 and 5
Rand[,4]<-Rand[,4]*(700-0.1)+0.1 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.1 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.1 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(700-0.1)+0.1 #chi between 0.1 and 4
Rand[,9]<-Rand[,9]*(10-0.1)+0.1 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.1 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.1#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.1 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.1 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.1   #rho12 between 0 and 1
Rand[,15]<-Rand[,15]*100+0.1   #c between 0 and 100
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand14<-Rand[:,1:14]
Rand<-sobol(10000,dim=15,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.1)+0.1  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.1 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(700-0.1)+0.1 #ddelta between 0.1 and 5
Rand[,4]<-Rand[,4]*(700-0.1)+0.1 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.1 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.1 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(700-0.1)+0.1 #chi between 0.1 and 4
Rand[,9]<-Rand[,9]*(10-0.1)+0.1 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.1 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.1#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.1 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.1 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.1   #rho12 between 0 and 1
Rand[,15]<-Rand[,15]*100+0.1   #c between 0 and 100
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand14<-Rand[,1:14]
Rand<-sobol(10000,dim=15,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.1)+0.1  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.1 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(700-0.1)+0.1 #ddelta between 0.1 and 5
Rand[,4]<-Rand[,4]*(700-0.1)+0.1 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.1 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.1 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(700-0.1)+0.1 #chi between 0.1 and 4
Rand[,9]<-Rand[,9]*(10-0.1)+0.1 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.1 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.1#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.1 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.1 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.1   #rho12 between 0 and 1
Rand[,15]<-Rand[,15]*100+0.1   #c between 0 and 100
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand14<-Rand[,1:14]
write.table(Rand14,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim14.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand<-sobol(10000,dim=15,seed=2581633)
Rand[,1]<-Rand[,1]*(0.9-0.1)+0.1  #Between 0.1 and 0.9
Rand[,2]<-Rand[,2]*(10-0.1)+0.1 ###ggamma between 0.1 and 10
Rand[,3]<-Rand[,3]*(700-0.1)+0.1 #ddelta between 0.1 and 5
Rand[,4]<-Rand[,4]*(700-0.1)+0.1 #bbeta  between 0.1 and 2
Rand[,5]<-Rand[,5]*(10-0.1)+0.1 ###ssigma  between 0.1 and 10
Rand[,6]<-Rand[,6]*(700-0.1)+0.1 #Kappa between 0.1 and 2
Rand[,7]<-Rand[,7]*(4-0.25)+0.25 ###psi between 0.25 and 4.
Rand[,8]<-Rand[,8]*(700-0.1)+0.1 #chi between 0.1 and 4
Rand[,9]<-Rand[,9]*(10-0.1)+0.1 #rrho between 0.1 and 10. Update: We haveLarger than psi
Rand[,10]<-Rand[,10]*4+0.1 #Mmu1 between 0.5 and 3
Rand[,11]<-Rand[,11]*4 +0.1#mmu3 between 0.5 and 3.
Rand[,12]<-Rand[,12]*5+0.1 #ssigma1 between 0.5 and 3
Rand[,13]<-Rand[,13]*5+0.1 #ssigma2 between 0.5 and 3
Rand[,14]<-Rand[,14]*1+0.1   #rho12 between 0 and 1
Rand[,15]<-Rand[,15]*100+0.1   #c between 0 and 100
write.table(Rand,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim15.csv", sep=",",  col.names=FALSE,row.names = FALSE)
Rand14<-Rand[,1:14]
write.table(Rand14,file = "/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/SobolDim14.csv", sep=",",  col.names=FALSE,row.names = FALSE)
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
rm(list=ls(all=TRUE))
#Obtaining the empirical moments#
source('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/OptimalTaxation/EmpiricalMoments/Momentos.R')
setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Dim15_Initial')
source('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/EmpiricalMoments/Momentos.R')
head(MOMENTO19)
source('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/EmpiricalMoments/Momentos.R')
setwd('/Users/rodrigoazuero/Dropbox/OptmalTaxationShared/Data/git/gitVersion/OptimalTaxation/TheoreticalMoments/Equilibrium2/Equilibrium2/SobolsGenerated/Dim15_Initial')
library(nleqslv)
library(lattice)
library("gridExtra")
library("cowplot")
library(ggpubr)
library(ggplot2)
library(reshape)
library(grid)
library(data.table)
library(pastecs)
getwd()
#Loading the parameters
Parameters<-read.csv("ParametersCSV.csv", header = F, sep=",")
dim(Parameters)
head(Parameters)
DistanceMom<-read.csv("DistanceMoments.csv", header = F, sep=",")
DistanceMom<-read.csv("DistanceMoments.csv", header = F, sep=",")
dim(DistanceMom)
colnames(DistanceMom)<-"Distance"
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
dim(EqValues)
length(EqValues)
dim(DistanceMom)
#Loading the moments
ProductionMoments<-read.csv("ThMoments0CSV.csv", header = F, sep=",")
colnames(ProductionMoments)<-paste0(rep("Production",10),colnames(ProductionMoments))
dim(ProductionMoments)
Taxesproportionally<-read.csv("ThMoments1CSV.csv", header = F, sep=",")
colnames(Taxesproportionally)<-paste0(rep("Taxesproportionally",10),colnames(Taxesproportionally))
TotalWorkersDemanded<-read.csv("ThMoments2CSV.csv", header = F, sep=",")
colnames(TotalWorkersDemanded)<-paste0(rep("TotalWorkersDemanded",10),colnames(TotalWorkersDemanded))
InformalDemandProportion<-read.csv("ThMoments3CSV.csv", header = F, sep=",")
colnames(InformalDemandProportion)<-paste0(rep("InformalDemandProportion",10),colnames(InformalDemandProportion))
IncomeDistribution<-read.csv("ThMoments4CSV.csv", header = F, sep=",")
colnames(IncomeDistribution)<-paste0(rep("IncomeDistribution",10),colnames(IncomeDistribution))
InformalLaborSupplyProp<-read.csv("ThMoments5CSV.csv", header = F, sep=",")
colnames(InformalLaborSupplyProp)<-paste0(rep("InformalLaborSupplyProp",10),colnames(InformalLaborSupplyProp))
TotalLaborSupply<-read.csv("ThMoments6CSV.csv", header = F, sep=",")
colnames(TotalLaborSupply)<-paste0(rep("TotalLaborSupply",10),colnames(TotalLaborSupply))
#We only need first column of prop entrepreneurs
PropEntrepreneurs<-read.csv("ThMoments7CSV.csv", header = F, sep=",")
PropEntrepreneurs<-PropEntrepreneurs[,1]
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
EqValues[1:1045]
EqValues[1:1046]
EqValues<-EqValues[1:1045]
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
dim(ProductionMoments)
dim(Taxesproportionally)
dim(TotalWorkersDemanded)
dim(InformalDemandProportion)
dim(IncomeDistribution)
dim(InformalLaborSupplyProp)
dim(TotalLaborSupply)
dim(PropEntrepreneurs)
length(PropEntrepreneurs)
dim(EqValues)
length(EqValues)
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
#Loading equilibrium
EqValues<-read.csv("EquilibriumValue.csv", header = F, sep=",")
EqValues<-EqValues[,1]
EqValues<-EqValues[1:10465]
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
#We need a column indicating if the equilibrium is successful o
AllMmoments[,Indic1 :=1-(TotalLaborSupplyV1+TotalLaborSupplyV2+TotalLaborSupplyV3
+TotalLaborSupplyV4+ TotalLaborSupplyV5 + TotalLaborSupplyV6+
TotalLaborSupplyV7+TotalLaborSupplyV8+TotalLaborSupplyV9==0)]
#2. If Total Labor supply ==1000
AllMmoments[,Indic2 :=1-(TotalLaborSupplyV1==1000)]
#3. If total Production ==0
AllMmoments[,Indic3 :=1-(ProductionV1+ProductionV2+ProductionV3
+ProductionV4+ ProductionV5 + ProductionV6+
ProductionV7+ProductionV8+ProductionV9==0)]
#4. Total
AllMmoments[,Indic :=1-1*(Indic1==0|Indic2==0|Indic3==0)]
#5. And remove Indic1, Indic2, Indic3
AllMmoments[,Indic1:=NULL]
AllMmoments[,Indic2:=NULL]
AllMmoments[,Indic3:=NULL]
names<-c("aalpha","ggamma","ddelta","bbeta","ssigma","kkappa","psi","chi",
"rho","mmu1","mmu2","ssigma1","ssigma2","rho12","c","NA")
colnames(Parameters)<-names
dim(AllMmoments)
dim(DistanceMom)
dim(Parameters)
Everything<-data.table(Parameters,DistanceMom,AllMmoments)
head(Parameters)
head(Parameters[16,1])
head(Parameters[16,:])
head(Parameters[16:])
head(Parameters[16])
head(Parameters)
setnames(Parameters,16,"Indic")
head(Parameters)
ParametersEquilibria=subset(Parameters,Indic!=0)
ParametersEquilibria
AllMmoments<-data.table(ProductionMoments,Taxesproportionally,
TotalWorkersDemanded,InformalDemandProportion,
IncomeDistribution,InformalLaborSupplyProp,
TotalLaborSupply,PropEntrepreneurs,EqValues)
#We need a column indicating if the equilibrium is successful or not. We will call it Indic.
#This will be if:
#1. TotalLaborSupply!=0.
AllMmoments[,Indic1 :=1-(TotalLaborSupplyV1+TotalLaborSupplyV2+TotalLaborSupplyV3
+TotalLaborSupplyV4+ TotalLaborSupplyV5 + TotalLaborSupplyV6+
TotalLaborSupplyV7+TotalLaborSupplyV8+TotalLaborSupplyV9==0)]
#2. If Total Labor supply ==1000
AllMmoments[,Indic2 :=1-(TotalLaborSupplyV1==1000)]
#3. If total Production ==0
AllMmoments[,Indic3 :=1-(ProductionV1+ProductionV2+ProductionV3
+ProductionV4+ ProductionV5 + ProductionV6+
ProductionV7+ProductionV8+ProductionV9==0)]
#4. Total
AllMmoments[,Indic :=1-1*(Indic1==0|Indic2==0|Indic3==0)]
#5. And remove Indic1, Indic2, Indic3
AllMmoments[,Indic1:=NULL]
AllMmoments[,Indic2:=NULL]
AllMmoments[,Indic3:=NULL]
head(AllMmoments)
InformalLaborSupplyProp[1,1]
InformalLaborSupplyProp[2,1]
InformalLaborSupplyProp[:,1]
InformalLaborSupplyProp[1]
InformalLaborSupplyProp[1]
InformalLaborSupplyProp[20]
InformalLaborSupplyProp[20,1]
InformalLaborSupplyProp[20,1:10465]
InformalLaborSupplyProp[1:10465,1]
summary(cars)
plot(pressure)
